import { TemplateRef } from '@angular/core';
import { MbscResource } from '../../core/components/eventcalendar/eventcalendar';
import { CalendarDayBase } from '../../core/shared/calendar-view/calendar-day';
import { ICalendarProcessedLabel } from '../../core/shared/calendar-view/calendar-view';
import { ITimezonePlugin } from '../../core/util/datetime';
/** @hidden */
export declare class MbscCalendarDay extends CalendarDayBase {
    active: boolean;
    clickToCreate: boolean | 'double' | 'single';
    colors: any;
    dataTimezone: string;
    date: number;
    day: string;
    dayIndex: number;
    dayTemplate: TemplateRef<any>;
    dayContentTemplate: TemplateRef<any>;
    dayWidths: number[];
    disabled: boolean;
    display: boolean;
    displayTimezone: string;
    dragToCreate: boolean;
    dragToResize: boolean;
    dragToMove: boolean;
    eventText: string;
    eventsText: string;
    exclusiveEndDates: boolean;
    firstDay: number;
    hasMarks: boolean;
    hoverEnd: number;
    hoverStart: number;
    isActiveMonth: boolean;
    isPicker: boolean;
    labels: any;
    labelTemplate: TemplateRef<any>;
    labelContentTemplate: TemplateRef<any>;
    dragData?: {
        [key: number]: any[];
    };
    marks: any;
    month: string;
    monthShort: string;
    outer: boolean;
    rangeEnd: number;
    rangeStart: number;
    resourcesMap?: {
        [key: number]: MbscResource;
    };
    selected: boolean;
    showEventTooltip: boolean;
    text: string;
    timeFormat: string;
    timezonePlugin: ITimezonePlugin;
    todayText: string;
    type: 'day' | 'month' | 'year';
    onDayClick: (args: any) => void;
    onDayDoubleClick: (args: any) => void;
    onDayRightClick: (args: any) => void;
    onHoverIn: (args: any) => void;
    onHoverOut: (args: any) => void;
    onLabelClick: (args: any) => void;
    onLabelDoubleClick: (args: any) => void;
    onLabelRightClick: (args: any) => void;
    onLabelHoverIn: (args: any) => void;
    onLabelHoverOut: (args: any) => void;
    onLabelDelete: (args: any) => void;
    onLabelUpdateStart: (args: any) => void;
    onLabelUpdateMove: (args: any) => void;
    onLabelUpdateEnd: (args: any) => void;
    onLabelUpdateModeOn: (args: any) => void;
    onLabelUpdateModeOff: (args: any) => void;
    _getLabelKey(index: number, label: ICalendarProcessedLabel): string | number;
}
