import { TemplateRef } from '@angular/core';
import { MbscResource } from '../../core/shared/calendar-view/calendar-view.types';
import { MonthViewBase } from '../../core/shared/calendar-view/month-view';
import { DateType, ITimezonePlugin } from '../../core/util/datetime';
/** @hidden */
export declare class MbscMonthView extends MonthViewBase {
    activeDate: number;
    calendarType: 'year' | 'month' | 'week';
    cellSizes: number[];
    clickToCreate: boolean | 'double' | 'single';
    colors: {};
    dataTimezone: string;
    dayNames: string[];
    dayNamesMin: string[];
    dayNamesShort: string[];
    dayTemplate: TemplateRef<any>;
    dayContentTemplate: TemplateRef<any>;
    displayTimezone: string;
    dragToCreate: boolean;
    dragToResize: boolean;
    dragToMove: boolean;
    eventText: string;
    eventsText: string;
    exclusiveEndDates: boolean;
    firstDay: number;
    firstPageDay: number;
    hasMarks: boolean;
    hoverEnd: number;
    hoverStart: number;
    isActive: boolean;
    isPicker: boolean;
    invalid: {};
    labels: {};
    labelTemplate: TemplateRef<any>;
    labelContentTemplate: TemplateRef<any>;
    dragData?: {
        [key: number]: any[];
    };
    marked: {};
    max: DateType;
    min: DateType;
    monthNames: string[];
    monthNamesShort: string[];
    rangeEnd: number;
    rangeStart: number;
    selectedDates: any;
    showEventTooltip: any;
    showOuter: boolean;
    showWeekDays: boolean;
    showWeekNumbers: boolean;
    showSingleMark: boolean;
    resourcesMap?: {
        [key: number]: MbscResource;
    };
    todayText: string;
    timeFormat: string;
    timezonePlugin: ITimezonePlugin;
    valid: {};
    weeks: number;
    getDate: (y: number, m: number, d: number) => Date;
    getDay: (d: Date) => number;
    getMonth: (d: Date) => number;
    getWeekNumber: (d: Date) => number;
    getYear: (d: Date) => number;
    onDayClick: (args: any) => void;
    onDayDoubleClick: (args: any) => void;
    onDayRightClick: (args: any) => void;
    onDayHoverIn: (args: any) => void;
    onDayHoverOut: (args: any) => void;
    onLabelClick: (args: any) => void;
    onLabelDoubleClick: (args: any) => void;
    onLabelRightClick: (args: any) => void;
    onLabelHoverIn: (args: any) => void;
    onLabelHoverOut: (args: any) => void;
    onLabelDelete: (args: any) => void;
    onLabelUpdateStart: (args: any) => void;
    onLabelUpdateMove: (args: any) => void;
    onLabelUpdateEnd: (args: any) => void;
    onLabelUpdateModeOn: (args: any) => void;
    onLabelUpdateModeOff: (args: any) => void;
}
