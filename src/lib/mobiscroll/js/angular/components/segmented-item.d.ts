import { ElementRef, EventEmitter } from '@angular/core';
import { SegmentedBase } from '../../core/components/segmented/segmented-item';
import { MbscRadioService } from '../shared/radio-service';
export declare class MbscSegmented extends SegmentedBase {
    _radioService: MbscRadioService;
    vInput: ElementRef;
    vBox: ElementRef;
    color: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light';
    checked: any;
    disabled: boolean;
    endIcon: string;
    endIconSrc: string;
    endIconSvg: string;
    icon: string;
    iconSvg: string;
    iconSrc: string;
    name: string;
    ripple: boolean;
    startIcon: string;
    startIconSrc: string;
    startIconSvg: string;
    select: 'single' | 'multiple';
    value: any;
    checkedChange: EventEmitter<any>;
    private _check;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setDisabledState(disabled: boolean): void;
    writeValue(val: any): void;
    protected _ctor(): void;
    protected _change(checked: boolean): void;
    protected _render(s: any, state: any): void;
    protected _mounted(): void;
}
